server:
  port: ${PORT:${SERVER_PORT:0}}

spring:
  application:
    name: ms-proveedor-service

  # Si en algún momento desearas usar MySQL, descomenta estas líneas y ajusta según tus credenciales:
  # datasource:
  #   url: jdbc:mysql://localhost:3306/ms_proveedores_db
  #   username: root
  #   password:
  #   driver-class-name: com.mysql.cj.jdbc.Driver
  #
  # jpa:
  #   hibernate:
  #     ddl-auto: update
  #   show-sql: true

  # Configuración H2 en memoria
  datasource:
    url: jdbc:h2:mem:ms_proveedores;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
    h2:
      console:
        enabled: true
        path: /h2-console

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /doc/swagger-ui.html

eureka:
  client:
    serviceUrl:
      # Zona de Eureka (ajusta la URL si tu servidor corre en otro host o puerto)
      defaultZone: ${EUREKA_URI:http://localhost:8090/eureka}
  instance:
    #hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

feign:
  sunat:
    base-url: https://api.apis.net.pe/v1


resilience4j.circuitbreaker:
  instances:
    proveedoresValidarRucCB:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 4
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
